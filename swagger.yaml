swagger: '2.0'
info:
  title: sCORe API
  version: 1.0.0
  description: |

    The sCORe API consists of multiple high-performance RESTful JSON endpoints that can be used to fetch data relevant to the historical performance and reputation of Chainlink Oracles. 
      
    There are client libraries written in [python](https://github.com/securedatalinks/reputation-score-python-client), [golang](https://github.com/securedatalinks/reputation-score-golang-client) and [nodejs](https://github.com/securedatalinks/reputation-score-js-client) generated from [swagger file](https://github.com/securedatalinks/slate/blob/master/swagger.yaml). If you require different language functionality then be sure to get into contact.
      
      
    # Quick Start Guide  
    
    > Get all snapshots of securedatalinks oracle reputation taken on 27.1.2020
    
    ```shell  
      curl -X GET -H "Authentication: API_KEY" "reputation.link/v1/reputations/historical?start=0&end=99877754&oracle_address=0x240BaE5A27233Fd3aC5440B5a598467725F7D1cd"
    ```

    * Sign up for a free API key on [reputation.link](https://reputation.link). 
    * If you operate an Oracle then be sure to register to to display your performance data on our frontend as well as gain full access to the sCORe API depending on your subscription. 
    * Once your key has been generated, make a test call to ensure functionality. 
    * Check the example on the right, which fetches the up-to-date data relating to the Secure Data Links Oracle.
      


    # Authentication  

    > Here is an example using API_KEY in HTTP headers'. Make sure to replace `API_KEY` with your newly generated key.  

    ```shell  
      curl -X GET -H "Authentication: API_KEY" "reputation.link/v1/reputations/historical?start=0&end=99877754&oracle_address=0x240BaE5A27233Fd3aC5440B5a598467725F7D1cd"
    ```

    The API key must be included in all API requests via the HTTP header:
    `Authentication: API_KEY`  

    
      
    # Standards and Conventions  
    
    ### Endpoint Response Payload Format 
        
    ```
    {  
      "data" : {
        ...  
      },  
      "status": {  
        "timestamp": "2018-06-06T07:52:27.273Z",  
        "status_code": 400,  
        "error_message": "Invalid value for \"id\"",  
      }  
    }  
    ```
    
    * Each endpoint returns data in JSON format with 2 parts, `data` and `status`.  
    * A `data` object contains results for the request if the call is successful.  
    * A `status` object contains the timestamp, when the call was executed, the status code and message which will  indicate if the request was succesfull.  
    * See [status codes and rate limits](#status-codes-and-rate-limits) for details on different status codes.

    
    ## Versioning  
    The sCORe API is versioned to ensure that any updates do not break anything. The latest version of this API is v1.0.0.  When testing the sCORe API ensure that the version you are using is correct.  
      
    Backwards compatible updates may be added to the API without creating new version. You can check our [Changelog](#changelog) to see those changes.  
    
    ### These updates are considered backwards compatible:  
      
     * Adding new API resources.  
     * Adding new optional request parameters to existing API methods.  
     * Adding new properties to existing API responses.  
     * Changing the order of properties in existing API responses.  
     * Changing the way some data are computed, while not changing the range of possible values
      
    ## Date and Time Formats  
    * All endpoints that require date/time parameters allow timestamps to be passed as Unix time format (eg. 1528249600).  
    * All timestamps returned in JSON payloads are returned in UTC time using a human-readable format which follows this pattern: `yyyy-mm-dd hh:mm:ssZ`  
    * Data is collected, recorded, and reported in UTC time unless otherwise specified.  
      
    ## Status codes
    * Every endpoint responds with HTTP status code 200 for both succesful requests and failures. The `status` object is always included in the JSON response. This object contains `status_code` and `error_message`.  
    * If there was a problem processing the request, one of these status codes is returned.
      
    Error Code |  Error Message  
    -----------|---------------  
    1000 | Request was succesful  
    1001 | This API Key is invalid.  
    1002 | API key missing.  
    1003 | Invalid request parameters  
    1004 | Your don't have permissions for this call.  
    1005 | This API Key has been disabled. Please contact support.  
    1006 | You've exceeded your API Key's HTTP request rate limit.   
    1007 | You've exceeded your API Key's daily rate limit.  
    1008 | You've exceeded your API Key's monthly rate limit.  
      
    ## Rate limits
    Each key can be used to query the endpoint up to 30 times per minute.
    

    ## Cache / Update frequency
    At this point all data are updated every 5 minutes. 
    
    # Endpoint overview  
      
    Endpoint |  Error Message  
    -----------|---------------  
    [/v1/reputations/historical](#historical-reputations-of-one-oracle) | Historical data relating to an individual oracle
    [/v1/reputations/latest](#get-last-reputation-for-one-oracle) | Latest data relating to an individual oracle
    [/v1/key/info](#meta-information-relating-to-a-specific-api-key) | Metadata relating to the API key used  
    [/v1/oracles/info](#metadata-on-oracles) | Public information relating to an individual oracle

    # Changelog
    30.1.2020 - First version of API


  contact:
    email: inquiry@reputation.link
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Public endpoints
    description: Operations for retrieval of reputation data.
paths:
  /v1/reputations/historical:
    get:
      tags:
        - Public endpoints
      summary: historical reputations of one oracle
      operationId: rephist
      description: Returns each update of reputation between start and end periods for a given oracle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: start
          description: Get data after
          type: integer
          required: true
        - in: query
          name: end
          description: Get data before
          type: integer
          required: true
        - in: query
          name: oracle_address
          description: 'Get performance data for a specified oracle.'
          type: string
          required: true
        - in: header
          description: 'API key'
          name: Authentication
          type: string
          required: true
      responses:
        '200':
          description: A User object
          schema:
            $ref: '#/definitions/ReputationArray'
  /v1/reputations/latest:
    get:
      tags:
        - Public endpoints
      summary: get last reputation for one oracle
      operationId: replate
      description: Returns latest update of reputation of given oracle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: oracle_address
          description: 'Get performance data for a specified oracle.'
          type: string
          required: true
        - in: header
          name: Authentication
          description: 'API key'
          type: string
          required: true
      responses:
        '200':
          description: See status error codes for error reporting
          schema:
            $ref: '#/definitions/Reputation'
  /v1/key/info:
    get:
      tags:
        - Public endpoints
      summary: 'Meta information relating to a specific API key'
      operationId: getKeyInfo
      description: Returns info about given API KEY
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authentication
          description: 'API key'
          type: string
          required: true
      responses:
        '200':
          description: See status error codes for error reporting
          schema:
            $ref: '#/definitions/Key_info'
  /v1/oracles/info:
    get:
      tags:
        - Public endpoints
      summary: Metadata on oracles
      operationId: Oracles
      description: Returns Public endpoints data relevant to an oracle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: oracle_addres
          description: 'Get performance data for a specified oracle. If missing, get all oracles that were active between start and end periods'
          type: string
          required: true
        - in: header
          description: 'API key'
          name: Authentication
          type: string
          required: true
      responses:
        '200':
          description: See status error codes for error reporting
          schema:
            $ref: '#/definitions/Oracle_info'
definitions:
  Reputation:
    type: object
    required:
      - timestamp
      - network
      - oracle_address
      - reputation
      - total_requests
      - total_responses
      - link_earned
      - avg_response_time
      - uptime
      - unique_requestors
      - gas_price
      - assignment_complete_ratio
    properties:
      timestamp:
        type: integer
        format: timestamp
        example: 97521541
      network:
        type: string
        example: Ropsten
      oracle_address:
        type: string
        example: "0xB0Cf943Cf94E7B6A2657D15af41c5E06c2BFEA3D"
      reputation:
        type: number
        example: 95.4 
      total_requests:
        type: integer
        example: 1400
      total_responses:
        type: integer
        example: 1399 
      link_earned:
        type: integer 
        example: 1450
      avg_response_time:
        type: number
        example: 0.99
      uptime:
        type: number
        example: 0.999
      unique_requestors:
        type: integer
        example: 40
      gas_price:
        type: integer
        example: 134057
      assignment_complete_ratio:
        type: number
        example: 0.99
  ReputationArray:
    type: array
    items:
      $ref: '#/definitions/Reputation'
  Key_info:
    type: object
    required:
      - email
      - owned_oracles
      - remaining_rate_limit
    properties:
      email:
        type: string
        example: oraclereputation@chainlink.com
      owned_oracles:
        type: string
        example: "0xB0Cf943Cf94E7B6A2657D15af41c5E06c2BFEA3D"
      remaining_rate_limit:
        type: integer
        example: 23
  Oracle_info:
    required:
     - name 
     - website 
     - url_name 
     - contact_email 
     - email 
     - description 
     - oracle_address 
     - location 
     - node_hosting 
     - eth_node_hosting 
    properties:
      name:
        type: string
        example: SDL Oracle
      website:
        type: string
        example: Secure Data Links
      url_name:
        type: string
        example: www.securedatalinks.com
      contact_email:
        type: string
        example: admin@securedatalinks.com
      email:
        type: string
        example: admin@securedatalinks.com
      description:
        type: string
        example: Integrate with the Secure Data Links Oracle
      oracle_address:
        type: string
        example: "0x2Ed7E9fCd3c0568dC6167F0b8aEe06A02CD9ebd8"
      location:
        type: string
        example: Brisbane, Australia
      node_hosting:
        type: string
        example: Hosted locally with GCP backups
      eth_node_hosting:
        type: string
        example: GCP




host: 'reputation.link:3001'
basePath: /
schemes:
  - https
